/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.red.search.dejavu.relevance.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
public class RelevanceScore implements org.apache.thrift.TBase<RelevanceScore, RelevanceScore._Fields>, java.io.Serializable, Cloneable, Comparable<RelevanceScore> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("RelevanceScore");

  private static final org.apache.thrift.protocol.TField CATEGORY_FIELD_DESC = new org.apache.thrift.protocol.TField("category", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField SCORE_FIELD_DESC = new org.apache.thrift.protocol.TField("score", org.apache.thrift.protocol.TType.DOUBLE, (short)2);
  private static final org.apache.thrift.protocol.TField SCOREALT_FIELD_DESC = new org.apache.thrift.protocol.TField("scorealt", org.apache.thrift.protocol.TType.DOUBLE, (short)3);
  private static final org.apache.thrift.protocol.TField ALLTERM_CROSS_MATCH_FIELD_DESC = new org.apache.thrift.protocol.TField("allterm_cross_match", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField UNITOKEN_DECAY_FIELD_DESC = new org.apache.thrift.protocol.TField("unitoken_decay", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField PHRASE_SLOP_DECAY_FIELD_DESC = new org.apache.thrift.protocol.TField("phrase_slop_decay", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField USERNAME_MATCH_FIELD_DESC = new org.apache.thrift.protocol.TField("username_match", org.apache.thrift.protocol.TType.BOOL, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new RelevanceScoreStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new RelevanceScoreTupleSchemeFactory();

  public int category; // required
  public double score; // required
  public double scorealt; // required
  public boolean allterm_cross_match; // required
  public boolean unitoken_decay; // required
  public boolean phrase_slop_decay; // required
  public boolean username_match; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CATEGORY((short)1, "category"),
    SCORE((short)2, "score"),
    SCOREALT((short)3, "scorealt"),
    ALLTERM_CROSS_MATCH((short)4, "allterm_cross_match"),
    UNITOKEN_DECAY((short)5, "unitoken_decay"),
    PHRASE_SLOP_DECAY((short)6, "phrase_slop_decay"),
    USERNAME_MATCH((short)7, "username_match");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CATEGORY
          return CATEGORY;
        case 2: // SCORE
          return SCORE;
        case 3: // SCOREALT
          return SCOREALT;
        case 4: // ALLTERM_CROSS_MATCH
          return ALLTERM_CROSS_MATCH;
        case 5: // UNITOKEN_DECAY
          return UNITOKEN_DECAY;
        case 6: // PHRASE_SLOP_DECAY
          return PHRASE_SLOP_DECAY;
        case 7: // USERNAME_MATCH
          return USERNAME_MATCH;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CATEGORY_ISSET_ID = 0;
  private static final int __SCORE_ISSET_ID = 1;
  private static final int __SCOREALT_ISSET_ID = 2;
  private static final int __ALLTERM_CROSS_MATCH_ISSET_ID = 3;
  private static final int __UNITOKEN_DECAY_ISSET_ID = 4;
  private static final int __PHRASE_SLOP_DECAY_ISSET_ID = 5;
  private static final int __USERNAME_MATCH_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CATEGORY, new org.apache.thrift.meta_data.FieldMetaData("category", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SCORE, new org.apache.thrift.meta_data.FieldMetaData("score", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.SCOREALT, new org.apache.thrift.meta_data.FieldMetaData("scorealt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.ALLTERM_CROSS_MATCH, new org.apache.thrift.meta_data.FieldMetaData("allterm_cross_match", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.UNITOKEN_DECAY, new org.apache.thrift.meta_data.FieldMetaData("unitoken_decay", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.PHRASE_SLOP_DECAY, new org.apache.thrift.meta_data.FieldMetaData("phrase_slop_decay", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.USERNAME_MATCH, new org.apache.thrift.meta_data.FieldMetaData("username_match", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(RelevanceScore.class, metaDataMap);
  }

  public RelevanceScore() {
  }

  public RelevanceScore(
    int category,
    double score,
    double scorealt,
    boolean allterm_cross_match,
    boolean unitoken_decay,
    boolean phrase_slop_decay,
    boolean username_match)
  {
    this();
    this.category = category;
    setCategoryIsSet(true);
    this.score = score;
    setScoreIsSet(true);
    this.scorealt = scorealt;
    setScorealtIsSet(true);
    this.allterm_cross_match = allterm_cross_match;
    setAllterm_cross_matchIsSet(true);
    this.unitoken_decay = unitoken_decay;
    setUnitoken_decayIsSet(true);
    this.phrase_slop_decay = phrase_slop_decay;
    setPhrase_slop_decayIsSet(true);
    this.username_match = username_match;
    setUsername_matchIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public RelevanceScore(RelevanceScore other) {
    __isset_bitfield = other.__isset_bitfield;
    this.category = other.category;
    this.score = other.score;
    this.scorealt = other.scorealt;
    this.allterm_cross_match = other.allterm_cross_match;
    this.unitoken_decay = other.unitoken_decay;
    this.phrase_slop_decay = other.phrase_slop_decay;
    this.username_match = other.username_match;
  }

  public RelevanceScore deepCopy() {
    return new RelevanceScore(this);
  }

  @Override
  public void clear() {
    setCategoryIsSet(false);
    this.category = 0;
    setScoreIsSet(false);
    this.score = 0.0;
    setScorealtIsSet(false);
    this.scorealt = 0.0;
    setAllterm_cross_matchIsSet(false);
    this.allterm_cross_match = false;
    setUnitoken_decayIsSet(false);
    this.unitoken_decay = false;
    setPhrase_slop_decayIsSet(false);
    this.phrase_slop_decay = false;
    setUsername_matchIsSet(false);
    this.username_match = false;
  }

  public int getCategory() {
    return this.category;
  }

  public RelevanceScore setCategory(int category) {
    this.category = category;
    setCategoryIsSet(true);
    return this;
  }

  public void unsetCategory() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CATEGORY_ISSET_ID);
  }

  /** Returns true if field category is set (has been assigned a value) and false otherwise */
  public boolean isSetCategory() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CATEGORY_ISSET_ID);
  }

  public void setCategoryIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CATEGORY_ISSET_ID, value);
  }

  public double getScore() {
    return this.score;
  }

  public RelevanceScore setScore(double score) {
    this.score = score;
    setScoreIsSet(true);
    return this;
  }

  public void unsetScore() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SCORE_ISSET_ID);
  }

  /** Returns true if field score is set (has been assigned a value) and false otherwise */
  public boolean isSetScore() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SCORE_ISSET_ID);
  }

  public void setScoreIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SCORE_ISSET_ID, value);
  }

  public double getScorealt() {
    return this.scorealt;
  }

  public RelevanceScore setScorealt(double scorealt) {
    this.scorealt = scorealt;
    setScorealtIsSet(true);
    return this;
  }

  public void unsetScorealt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SCOREALT_ISSET_ID);
  }

  /** Returns true if field scorealt is set (has been assigned a value) and false otherwise */
  public boolean isSetScorealt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SCOREALT_ISSET_ID);
  }

  public void setScorealtIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SCOREALT_ISSET_ID, value);
  }

  public boolean isAllterm_cross_match() {
    return this.allterm_cross_match;
  }

  public RelevanceScore setAllterm_cross_match(boolean allterm_cross_match) {
    this.allterm_cross_match = allterm_cross_match;
    setAllterm_cross_matchIsSet(true);
    return this;
  }

  public void unsetAllterm_cross_match() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ALLTERM_CROSS_MATCH_ISSET_ID);
  }

  /** Returns true if field allterm_cross_match is set (has been assigned a value) and false otherwise */
  public boolean isSetAllterm_cross_match() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ALLTERM_CROSS_MATCH_ISSET_ID);
  }

  public void setAllterm_cross_matchIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ALLTERM_CROSS_MATCH_ISSET_ID, value);
  }

  public boolean isUnitoken_decay() {
    return this.unitoken_decay;
  }

  public RelevanceScore setUnitoken_decay(boolean unitoken_decay) {
    this.unitoken_decay = unitoken_decay;
    setUnitoken_decayIsSet(true);
    return this;
  }

  public void unsetUnitoken_decay() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UNITOKEN_DECAY_ISSET_ID);
  }

  /** Returns true if field unitoken_decay is set (has been assigned a value) and false otherwise */
  public boolean isSetUnitoken_decay() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UNITOKEN_DECAY_ISSET_ID);
  }

  public void setUnitoken_decayIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UNITOKEN_DECAY_ISSET_ID, value);
  }

  public boolean isPhrase_slop_decay() {
    return this.phrase_slop_decay;
  }

  public RelevanceScore setPhrase_slop_decay(boolean phrase_slop_decay) {
    this.phrase_slop_decay = phrase_slop_decay;
    setPhrase_slop_decayIsSet(true);
    return this;
  }

  public void unsetPhrase_slop_decay() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PHRASE_SLOP_DECAY_ISSET_ID);
  }

  /** Returns true if field phrase_slop_decay is set (has been assigned a value) and false otherwise */
  public boolean isSetPhrase_slop_decay() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PHRASE_SLOP_DECAY_ISSET_ID);
  }

  public void setPhrase_slop_decayIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PHRASE_SLOP_DECAY_ISSET_ID, value);
  }

  public boolean isUsername_match() {
    return this.username_match;
  }

  public RelevanceScore setUsername_match(boolean username_match) {
    this.username_match = username_match;
    setUsername_matchIsSet(true);
    return this;
  }

  public void unsetUsername_match() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USERNAME_MATCH_ISSET_ID);
  }

  /** Returns true if field username_match is set (has been assigned a value) and false otherwise */
  public boolean isSetUsername_match() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USERNAME_MATCH_ISSET_ID);
  }

  public void setUsername_matchIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USERNAME_MATCH_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case CATEGORY:
      if (value == null) {
        unsetCategory();
      } else {
        setCategory((java.lang.Integer)value);
      }
      break;

    case SCORE:
      if (value == null) {
        unsetScore();
      } else {
        setScore((java.lang.Double)value);
      }
      break;

    case SCOREALT:
      if (value == null) {
        unsetScorealt();
      } else {
        setScorealt((java.lang.Double)value);
      }
      break;

    case ALLTERM_CROSS_MATCH:
      if (value == null) {
        unsetAllterm_cross_match();
      } else {
        setAllterm_cross_match((java.lang.Boolean)value);
      }
      break;

    case UNITOKEN_DECAY:
      if (value == null) {
        unsetUnitoken_decay();
      } else {
        setUnitoken_decay((java.lang.Boolean)value);
      }
      break;

    case PHRASE_SLOP_DECAY:
      if (value == null) {
        unsetPhrase_slop_decay();
      } else {
        setPhrase_slop_decay((java.lang.Boolean)value);
      }
      break;

    case USERNAME_MATCH:
      if (value == null) {
        unsetUsername_match();
      } else {
        setUsername_match((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case CATEGORY:
      return getCategory();

    case SCORE:
      return getScore();

    case SCOREALT:
      return getScorealt();

    case ALLTERM_CROSS_MATCH:
      return isAllterm_cross_match();

    case UNITOKEN_DECAY:
      return isUnitoken_decay();

    case PHRASE_SLOP_DECAY:
      return isPhrase_slop_decay();

    case USERNAME_MATCH:
      return isUsername_match();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case CATEGORY:
      return isSetCategory();
    case SCORE:
      return isSetScore();
    case SCOREALT:
      return isSetScorealt();
    case ALLTERM_CROSS_MATCH:
      return isSetAllterm_cross_match();
    case UNITOKEN_DECAY:
      return isSetUnitoken_decay();
    case PHRASE_SLOP_DECAY:
      return isSetPhrase_slop_decay();
    case USERNAME_MATCH:
      return isSetUsername_match();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof RelevanceScore)
      return this.equals((RelevanceScore)that);
    return false;
  }

  public boolean equals(RelevanceScore that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_category = true;
    boolean that_present_category = true;
    if (this_present_category || that_present_category) {
      if (!(this_present_category && that_present_category))
        return false;
      if (this.category != that.category)
        return false;
    }

    boolean this_present_score = true;
    boolean that_present_score = true;
    if (this_present_score || that_present_score) {
      if (!(this_present_score && that_present_score))
        return false;
      if (this.score != that.score)
        return false;
    }

    boolean this_present_scorealt = true;
    boolean that_present_scorealt = true;
    if (this_present_scorealt || that_present_scorealt) {
      if (!(this_present_scorealt && that_present_scorealt))
        return false;
      if (this.scorealt != that.scorealt)
        return false;
    }

    boolean this_present_allterm_cross_match = true;
    boolean that_present_allterm_cross_match = true;
    if (this_present_allterm_cross_match || that_present_allterm_cross_match) {
      if (!(this_present_allterm_cross_match && that_present_allterm_cross_match))
        return false;
      if (this.allterm_cross_match != that.allterm_cross_match)
        return false;
    }

    boolean this_present_unitoken_decay = true;
    boolean that_present_unitoken_decay = true;
    if (this_present_unitoken_decay || that_present_unitoken_decay) {
      if (!(this_present_unitoken_decay && that_present_unitoken_decay))
        return false;
      if (this.unitoken_decay != that.unitoken_decay)
        return false;
    }

    boolean this_present_phrase_slop_decay = true;
    boolean that_present_phrase_slop_decay = true;
    if (this_present_phrase_slop_decay || that_present_phrase_slop_decay) {
      if (!(this_present_phrase_slop_decay && that_present_phrase_slop_decay))
        return false;
      if (this.phrase_slop_decay != that.phrase_slop_decay)
        return false;
    }

    boolean this_present_username_match = true;
    boolean that_present_username_match = true;
    if (this_present_username_match || that_present_username_match) {
      if (!(this_present_username_match && that_present_username_match))
        return false;
      if (this.username_match != that.username_match)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + category;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(score);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(scorealt);

    hashCode = hashCode * 8191 + ((allterm_cross_match) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((unitoken_decay) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((phrase_slop_decay) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((username_match) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(RelevanceScore other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetCategory()).compareTo(other.isSetCategory());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCategory()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.category, other.category);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetScore()).compareTo(other.isSetScore());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScore()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.score, other.score);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetScorealt()).compareTo(other.isSetScorealt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScorealt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.scorealt, other.scorealt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAllterm_cross_match()).compareTo(other.isSetAllterm_cross_match());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllterm_cross_match()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allterm_cross_match, other.allterm_cross_match);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUnitoken_decay()).compareTo(other.isSetUnitoken_decay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUnitoken_decay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.unitoken_decay, other.unitoken_decay);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPhrase_slop_decay()).compareTo(other.isSetPhrase_slop_decay());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPhrase_slop_decay()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.phrase_slop_decay, other.phrase_slop_decay);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUsername_match()).compareTo(other.isSetUsername_match());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsername_match()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.username_match, other.username_match);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("RelevanceScore(");
    boolean first = true;

    sb.append("category:");
    sb.append(this.category);
    first = false;
    if (!first) sb.append(", ");
    sb.append("score:");
    sb.append(this.score);
    first = false;
    if (!first) sb.append(", ");
    sb.append("scorealt:");
    sb.append(this.scorealt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("allterm_cross_match:");
    sb.append(this.allterm_cross_match);
    first = false;
    if (!first) sb.append(", ");
    sb.append("unitoken_decay:");
    sb.append(this.unitoken_decay);
    first = false;
    if (!first) sb.append(", ");
    sb.append("phrase_slop_decay:");
    sb.append(this.phrase_slop_decay);
    first = false;
    if (!first) sb.append(", ");
    sb.append("username_match:");
    sb.append(this.username_match);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class RelevanceScoreStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RelevanceScoreStandardScheme getScheme() {
      return new RelevanceScoreStandardScheme();
    }
  }

  private static class RelevanceScoreStandardScheme extends org.apache.thrift.scheme.StandardScheme<RelevanceScore> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, RelevanceScore struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CATEGORY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.category = iprot.readI32();
              struct.setCategoryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SCORE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.score = iprot.readDouble();
              struct.setScoreIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SCOREALT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.scorealt = iprot.readDouble();
              struct.setScorealtIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ALLTERM_CROSS_MATCH
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.allterm_cross_match = iprot.readBool();
              struct.setAllterm_cross_matchIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // UNITOKEN_DECAY
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.unitoken_decay = iprot.readBool();
              struct.setUnitoken_decayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PHRASE_SLOP_DECAY
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.phrase_slop_decay = iprot.readBool();
              struct.setPhrase_slop_decayIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // USERNAME_MATCH
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.username_match = iprot.readBool();
              struct.setUsername_matchIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, RelevanceScore struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(CATEGORY_FIELD_DESC);
      oprot.writeI32(struct.category);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SCORE_FIELD_DESC);
      oprot.writeDouble(struct.score);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SCOREALT_FIELD_DESC);
      oprot.writeDouble(struct.scorealt);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ALLTERM_CROSS_MATCH_FIELD_DESC);
      oprot.writeBool(struct.allterm_cross_match);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(UNITOKEN_DECAY_FIELD_DESC);
      oprot.writeBool(struct.unitoken_decay);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PHRASE_SLOP_DECAY_FIELD_DESC);
      oprot.writeBool(struct.phrase_slop_decay);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USERNAME_MATCH_FIELD_DESC);
      oprot.writeBool(struct.username_match);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class RelevanceScoreTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public RelevanceScoreTupleScheme getScheme() {
      return new RelevanceScoreTupleScheme();
    }
  }

  private static class RelevanceScoreTupleScheme extends org.apache.thrift.scheme.TupleScheme<RelevanceScore> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, RelevanceScore struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCategory()) {
        optionals.set(0);
      }
      if (struct.isSetScore()) {
        optionals.set(1);
      }
      if (struct.isSetScorealt()) {
        optionals.set(2);
      }
      if (struct.isSetAllterm_cross_match()) {
        optionals.set(3);
      }
      if (struct.isSetUnitoken_decay()) {
        optionals.set(4);
      }
      if (struct.isSetPhrase_slop_decay()) {
        optionals.set(5);
      }
      if (struct.isSetUsername_match()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetCategory()) {
        oprot.writeI32(struct.category);
      }
      if (struct.isSetScore()) {
        oprot.writeDouble(struct.score);
      }
      if (struct.isSetScorealt()) {
        oprot.writeDouble(struct.scorealt);
      }
      if (struct.isSetAllterm_cross_match()) {
        oprot.writeBool(struct.allterm_cross_match);
      }
      if (struct.isSetUnitoken_decay()) {
        oprot.writeBool(struct.unitoken_decay);
      }
      if (struct.isSetPhrase_slop_decay()) {
        oprot.writeBool(struct.phrase_slop_decay);
      }
      if (struct.isSetUsername_match()) {
        oprot.writeBool(struct.username_match);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, RelevanceScore struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.category = iprot.readI32();
        struct.setCategoryIsSet(true);
      }
      if (incoming.get(1)) {
        struct.score = iprot.readDouble();
        struct.setScoreIsSet(true);
      }
      if (incoming.get(2)) {
        struct.scorealt = iprot.readDouble();
        struct.setScorealtIsSet(true);
      }
      if (incoming.get(3)) {
        struct.allterm_cross_match = iprot.readBool();
        struct.setAllterm_cross_matchIsSet(true);
      }
      if (incoming.get(4)) {
        struct.unitoken_decay = iprot.readBool();
        struct.setUnitoken_decayIsSet(true);
      }
      if (incoming.get(5)) {
        struct.phrase_slop_decay = iprot.readBool();
        struct.setPhrase_slop_decayIsSet(true);
      }
      if (incoming.get(6)) {
        struct.username_match = iprot.readBool();
        struct.setUsername_matchIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

